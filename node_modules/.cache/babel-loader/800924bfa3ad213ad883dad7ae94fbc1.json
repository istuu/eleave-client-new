{"ast":null,"code":"import _classCallCheck from \"/Users/danang/Documents/Work/my-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danang/Documents/Work/my-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danang/Documents/Work/my-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danang/Documents/Work/my-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danang/Documents/Work/my-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/danang/Documents/Work/my-react/src/App.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { IntlProvider } from \"react-intl\";\nimport AppLocale from \"./lang\";\nimport ColorSwitcher from \"./components/common/ColorSwitcher\";\nimport NotificationContainer from \"./components/common/react-notifications/NotificationContainer\";\nimport { isMultiColorActive } from \"./constants/defaultValues\";\nimport main from \"./views\";\nimport app from \"./views/app\";\nimport error from \"./views/error\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var locale = this.props.locale;\n      var currentAppLocale = AppLocale[locale];\n      return React.createElement(\"div\", {\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(IntlProvider, {\n        locale: currentAppLocale.locale,\n        messages: currentAppLocale.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(NotificationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), isMultiColorActive && React.createElement(ColorSwitcher, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/app\",\n        component: app,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/error\",\n        exact: true,\n        component: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Redirect, {\n        to: \"/error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  var locale = settings.locale;\n  return {\n    locale: locale\n  };\n};\n\nvar mapActionsToProps = {};\nexport default connect(mapStateToProps, mapActionsToProps)(App);","map":{"version":3,"sources":["/Users/danang/Documents/Work/my-react/src/App.js"],"names":["React","Component","connect","BrowserRouter","Router","Route","Switch","Redirect","IntlProvider","AppLocale","ColorSwitcher","NotificationContainer","isMultiColorActive","main","app","error","App","locale","props","currentAppLocale","messages","mapStateToProps","settings","mapActionsToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,QAJF,QAKO,kBALP;AAMA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,qBAAP,MAAkC,+DAAlC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;IAEMC,G;;;;;;;;;;;;;6BACK;AAAA,UACCC,MADD,GACY,KAAKC,KADjB,CACCD,MADD;AAEP,UAAME,gBAAgB,GAAGV,SAAS,CAACQ,MAAD,CAAlC;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,MAAM,EAAEE,gBAAgB,CAACF,MAD3B;AAEE,QAAA,QAAQ,EAAEE,gBAAgB,CAACC,QAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGR,kBAAkB,IAAI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFzB,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAEE,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,MAA1B;AAA2B,QAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEF,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,CAHF,CAJF,CADF,CADF;AAqBD;;;;EA1BeZ,S;;AA6BlB,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAAA,MAChCL,MADgC,GACrBK,QADqB,CAChCL,MADgC;AAExC,SAAO;AAAEA,IAAAA,MAAM,EAANA;AAAF,GAAP;AACD,CAHD;;AAIA,IAAMM,iBAAiB,GAAG,EAA1B;AAEA,eAAerB,OAAO,CACpBmB,eADoB,EAEpBE,iBAFoB,CAAP,CAGbP,GAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport AppLocale from \"./lang\";\r\nimport ColorSwitcher from \"./components/common/ColorSwitcher\";\r\nimport NotificationContainer from \"./components/common/react-notifications/NotificationContainer\";\r\nimport { isMultiColorActive } from \"./constants/defaultValues\";\r\nimport main from \"./views\";\r\nimport app from \"./views/app\";\r\nimport error from \"./views/error\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { locale } = this.props;\r\n    const currentAppLocale = AppLocale[locale];\r\n\r\n    return (\r\n      <div className=\"h-100\">\r\n        <IntlProvider\r\n          locale={currentAppLocale.locale}\r\n          messages={currentAppLocale.messages}\r\n        >\r\n          <React.Fragment>\r\n            <NotificationContainer />\r\n            {isMultiColorActive && <ColorSwitcher />}\r\n            <Router>\r\n              <Switch>\r\n                <Route path=\"/app\" component={app} />\r\n                <Route path=\"/error\" exact component={error} />\r\n                <Route path=\"/\" exact component={main} />\r\n                <Redirect to=\"/error\" />\r\n              </Switch>\r\n            </Router>\r\n          </React.Fragment>\r\n        </IntlProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ settings }) => {\r\n  const { locale } = settings;\r\n  return { locale };\r\n};\r\nconst mapActionsToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(App);\r\n"]},"metadata":{},"sourceType":"module"}